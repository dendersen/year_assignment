Index: src/dk/mtdm/frontend/window.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package dk.mtdm.frontend;\r\n\r\nimport dk.mtdm.backend.BlackJack.AI;\r\nimport dk.mtdm.backend.BlackJack.Table;\r\nimport dk.mtdm.controller.BlackJackController;\r\nimport dk.mtdm.controller.CurrentData;\r\nimport processing.core.PApplet;\r\nimport processing.core.PImage;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Objects;\r\n\r\npublic class window extends PApplet {\r\n    public static void main(String[] args) {\r\n        PApplet.main(\"window\");\r\n    }\r\n    private static button Hit;\r\n    private static button Stand;\r\n    public static button AI;\r\n    private static CurrentData Trans;\r\n    public void settings() {\r\n        size(1000,1000);\r\n    }\r\n    private static int showPlayerID;\r\n    public boolean showDealer = false;\r\n\r\n    public void setup() {\r\n        background(0,200,0);\r\n        Hit = new button(width/2 - 200,height/2,\"Hit\");\r\n        Stand = new button(width/2 + 200,height/2,\"Stand\");\r\n        AI = new button(width/2, height/2 + 100,\"END\");\r\n        AI.hide = true;\r\n    }\r\n\r\n    public void draw() {\r\n        background(0,200,0);\r\n        checkDeck();\r\n        checkButton();\r\n        if((Stand.hide || Hit.hide)) {\r\n            AI.hide = false;\r\n        } else {\r\n            AI.hide = true;\r\n\r\n        }\r\n    }\r\n\r\n    public static void hideButtons(){\r\n        Hit.hide = true;\r\n        Stand.hide = true;\r\n        AI.hide = true;\r\n    }\r\n\r\n    private final ArrayList<ArrayList<card>> players = new ArrayList<ArrayList<card>>();\r\n\r\n    private void checkDeck() {\r\n        for(int j = 0; j < Table.NUMBER_OF_PLAYERS; j++) {\r\n            ArrayList<card> deck = new ArrayList<>();\r\n            for(int i = 0; i < Table.getPlayer((byte) j).getHand().size(); i++) {\r\n                deck.add(new card(\r\n                    Table.getPlayer((byte) j).getHand().get(i).getSymbolString(),\r\n                    Table.getPlayer((byte) j).getHand().get(i).getNumberString(),\r\n                    i,\r\n                    j,\r\n                    Table.getPlayer((byte) j).getHand().size()\r\n                ));\r\n            }\r\n            players.add(deck);\r\n        }\r\n        if(showDealer) {\r\n            players.get(0).get(0).showHiden();\r\n            for (int i = 1; i < players.get(0).size(); i++ ) {\r\n                players.get(0).get(i).show();\r\n            }\r\n        } else {\r\n            for (int i = 0; i < players.get(0).size(); i++ ) {\r\n                players.get(0).get(i).show();\r\n            }\r\n        }\r\n\r\n        for (int i = 0; i < players.get(showPlayerID).size(); i++ ) {\r\n            players.get(showPlayerID).get(i).show();\r\n        }\r\n\r\n\r\n\r\n\r\n        players.clear();\r\n        push();\r\n        textAlign(CENTER);\r\n        textSize(50);\r\n        if(Table.getPlayer((byte) showPlayerID).IS_AI) {\r\n            text(\"AI: \" + showPlayerID,width / 2, height / 2);\r\n        } else {\r\n            text(\"Player: \" + showPlayerID,width / 2, height / 2);\r\n            println(Table.getPlayer((byte) showPlayerID).IS_AI);\r\n        }\r\n        pop();\r\n    }\r\n\r\n    public void checkButton() {\r\n//        AI.hide = false;\r\n        AI.show();\r\n        Hit.show();\r\n        Stand.show();\r\n\r\n    }\r\n\r\n    public void winner(Byte winner) {\r\n        Finish = true;\r\n        Hit.hide = true;\r\n        Stand.hide = true;\r\n        AI.hide = true;\r\n        push();\r\n        textSize(200);\r\n        textAlign(CENTER);\r\n        if (winner == 0) {\r\n            text(\"Vinder: \\n\" + \"Dealer\",width / 2,height / 3);\r\n        } else {\r\n            text(\"Vinder: \\n\" + winner,width / 2,height / 3);\r\n        }\r\n        pop();\r\n    }\r\n\r\n    public static void buttons(CurrentData data) {\r\n        Trans = data;\r\n\r\n        if (Trans.AVAILABLE_ACTIONS[0]) {\r\n            Hit.hide = false;\r\n            // laver en knap til hit\r\n        }\r\n        if (Trans.AVAILABLE_ACTIONS[1]){\r\n            // laver en knap til stand\r\n            Stand.hide = false;\r\n        }\r\n\r\n\r\n\r\n        showPlayerID = Trans.playerID;\r\n    }\r\n    public void mousePressed() {\r\n        Hit.clicked(\"Hit\");\r\n        Stand.clicked(\"Stand\");\r\n        AI.clicked(\"AI\");\r\n    }\r\n\r\n    public static void setTransfer(CurrentData Transfer){\r\n        Trans = Transfer;\r\n        System.out.println(\"Trans saved with player id = \" + Trans.playerID);\r\n    }\r\n\r\n    public static void returnBtn(){\r\n        Hit.hide = true;\r\n        Stand.hide = true;\r\n        AI.hide = true;\r\n        BlackJackController.theGame(Trans);\r\n    }\r\n\r\n    public class button {\r\n        private final int x;\r\n        private final int y;\r\n        private final int w = 150;\r\n        private final int h = 50;\r\n        private final String input;\r\n        public boolean hide = true;\r\n        button(int x,int y,String input) {\r\n            this.x = x;\r\n            this.y = y;\r\n            this.input = input;\r\n        }\r\n\r\n        public void show() {\r\n            if(hide) {\r\n                return;\r\n            }\r\n            push();\r\n            if(mouseX > x - w / 2 && mouseX < x + w / 2 && mouseY > y - h / 2 && mouseY < y + h / 2){\r\n                fill(220);\r\n            } else {\r\n                fill(255);\r\n            }\r\n            rectMode(CENTER);\r\n            rect(x,y,w,h);\r\n            fill(0);\r\n            textAlign(CENTER);\r\n            textSize(50);\r\n            text(input,x,y + h / 2 - 7);\r\n            pop();\r\n        }\r\n\r\n\r\n        private void hideBoolean(){\r\n            hide = true;\r\n        }\r\n        public void clicked(String id) {\r\n            if(hide) {\r\n                return;\r\n            }\r\n            if(!(mouseX > x - w / 2 && mouseX < x + w / 2 && mouseY > y - h / 2&& mouseY < y + h / 2)){\r\n                return;\r\n            }\r\n            if(Objects.equals(id, \"Hit\")){\r\n                print(\"hit is hit\");\r\n                Trans.setAction(true);\r\n            }\r\n            if(Objects.equals(id, \"Stand\")) {\r\n                print(\"stand is hit\");\r\n                Trans.setAction(false);\r\n            }\r\n            if(Objects.equals(id, \"AI\")) {\r\n                print(\"ai is hit\");\r\n                BlackJackController.theGame(Trans);\r\n            }\r\n\r\n            returnBtn();\r\n        }\r\n    }\r\n\r\n    public class card {\r\n        private final String symbol;\r\n        private final String Number;\r\n\r\n\r\n        private final int w = 200;\r\n        private final int h = 300;\r\n        private int x = width / 2;\r\n        private int y = height - h - 25;\r\n        private final String path = \"src/dk/mtdm/frontend/icons/\";\r\n        private boolean hide = false;\r\n\r\n        card(String symbol, String Number, int id, int dealer, int size) {\r\n            this.symbol = symbol;\r\n            this.Number = Number;\r\n            this.x += id * 125;\r\n            this.x -= ((size - 1) * 175 + 200) / 2;\r\n            if (dealer == 0) {\r\n                this.y = 25;\r\n            }\r\n            if(dealer == 0 && id == 0) {\r\n                hide = true;\r\n            }\r\n        }\r\n\r\n        public void show() {\r\n            if(hide) {\r\n                PImage back = null;\r\n                back = loadImage(path + \"back.png\");\r\n                image(back,x,y);\r\n                return;\r\n            }\r\n            push();\r\n            fill(255);\r\n            rect(x,y,w,h);\r\n            showSymbol();\r\n            showNumber();\r\n            pop();\r\n        }\r\n\r\n        private void showHiden() {\r\n            hide = false;\r\n            show();\r\n        }\r\n\r\n        private void showNumber() {\r\n            PImage imgNumber = null;\r\n\r\n            switch (this.Number) {\r\n                case \"K\" -> {\r\n                    if (Objects.equals(this.symbol, \"hjerter\") || Objects.equals(this.symbol, \"romber\")) {\r\n                        imgNumber = loadImage(path + \"rød_konge.png\");\r\n                    } else {\r\n                        imgNumber = loadImage(path + \"sort_konge.png\");\r\n                    }\r\n                }\r\n                case \"D\" -> {\r\n                    if (Objects.equals(this.symbol, \"hjerter\") || Objects.equals(this.symbol, \"romber\")) {\r\n                        imgNumber = loadImage(path + \"rød_dronning.png\");\r\n                    } else {\r\n                        imgNumber = loadImage(path + \"sort_dronning.png\");\r\n                    }\r\n                }\r\n                case \"B\" -> {\r\n                    if (Objects.equals(this.symbol, \"hjerter\") || Objects.equals(this.symbol, \"romber\")) {\r\n                        imgNumber = loadImage(path + \"rød_bonde.png\");\r\n                    } else {\r\n                        imgNumber = loadImage(path + \"sort_bonde.png\");\r\n                    }\r\n                }\r\n                case \"A\" -> {\r\n                    if (Objects.equals(this.symbol, \"hjerter\") || Objects.equals(this.symbol, \"romber\")) {\r\n                        imgNumber = loadImage(path + \"rød_es.png\");\r\n                    } else {\r\n                        imgNumber = loadImage(path + \"sort_es.png\");\r\n                    }\r\n                }\r\n                default -> {\r\n                    fill(0);\r\n                    textAlign(CENTER);\r\n                    textSize(100);\r\n                    text(this.Number,x + w / 2,y + h / 4 * 3);\r\n                }\r\n            }\r\n            if(!(imgNumber == null)) {\r\n                imageMode(CENTER);\r\n                image(imgNumber,x + w / 2, y + h / 4 * 3);\r\n            }\r\n        }\r\n\r\n        private void showSymbol() {\r\n\r\n\r\n            PImage imgSymbol = null;\r\n            switch (this.symbol) {\r\n                case \"hjerter\" -> {\r\n                    imgSymbol = loadImage(path + \"hjerter.png\");\r\n                }\r\n                case \"romber\" -> {\r\n                    imgSymbol = loadImage(path + \"romber.png\");\r\n                }\r\n                case \"klør\" -> {\r\n                    imgSymbol = loadImage(path + \"klør.png\");\r\n                }\r\n                case \"spar\" -> {\r\n                    imgSymbol = loadImage(path + \"spar.png\");\r\n                }\r\n            }\r\n            imageMode(CENTER);\r\n            image(imgSymbol,x + w / 2, y + h / 4);\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/dk/mtdm/frontend/window.java b/src/dk/mtdm/frontend/window.java
--- a/src/dk/mtdm/frontend/window.java	(revision 27dcef48050edf7e784dabba6f87027682879d32)
+++ b/src/dk/mtdm/frontend/window.java	(date 1653252572165)
@@ -106,7 +106,6 @@
     }
 
     public void winner(Byte winner) {
-        Finish = true;
         Hit.hide = true;
         Stand.hide = true;
         AI.hide = true;
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"VcsDirectoryMappings\">\r\n    <mapping directory=\"\" vcs=\"Git\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
--- a/.idea/vcs.xml	(revision 27dcef48050edf7e784dabba6f87027682879d32)
+++ b/.idea/vcs.xml	(date 1653251763770)
@@ -2,5 +2,6 @@
 <project version="4">
   <component name="VcsDirectoryMappings">
     <mapping directory="" vcs="Git" />
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"e2822c85-f4b4-413d-8bd4-8195abf9ff2b\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/.gitignore\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/dk/mtdm/frontend/window.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/dk/mtdm/frontend/window.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"29Vv4GNr6YAuzqkYijWOoAPJa8d\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;D:/kode/processing-4.0b8/core/library/core.jar&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"dk.mtdm.Main\" />\r\n      <module name=\"year_assignment\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"dk.mtdm.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"e2822c85-f4b4-413d-8bd4-8195abf9ff2b\" name=\"Changes\" comment=\"\" />\r\n      <created>1653210877245</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1653210877245</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 27dcef48050edf7e784dabba6f87027682879d32)
+++ b/.idea/workspace.xml	(date 1653252572283)
@@ -1,8 +1,9 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ChangeListManager">
-    <list default="true" id="e2822c85-f4b4-413d-8bd4-8195abf9ff2b" name="Changes" comment="">
-      <change beforePath="$PROJECT_DIR$/.idea/.gitignore" beforeDir="false" />
+    <list default="true" id="a37450fd-b29d-4cb1-98fc-96daa0ed7199" name="Changes" comment="">
+      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/dk/mtdm/frontend/window.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/dk/mtdm/frontend/window.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -16,7 +17,8 @@
   <component name="MarkdownSettingsMigration">
     <option name="stateVersion" value="1" />
   </component>
-  <component name="ProjectId" id="29Vv4GNr6YAuzqkYijWOoAPJa8d" />
+  <component name="ProjectId" id="29XFra17QtmNAr3YBHIaqbnW3wk" />
+  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
   <component name="ProjectViewState">
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
@@ -54,11 +56,11 @@
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
     <task active="true" id="Default" summary="Default task">
-      <changelist id="e2822c85-f4b4-413d-8bd4-8195abf9ff2b" name="Changes" comment="" />
-      <created>1653210877245</created>
+      <changelist id="a37450fd-b29d-4cb1-98fc-96daa0ed7199" name="Changes" comment="" />
+      <created>1653251725552</created>
       <option name="number" value="Default" />
       <option name="presentableId" value="Default" />
-      <updated>1653210877245</updated>
+      <updated>1653251725552</updated>
     </task>
     <servers />
   </component>
